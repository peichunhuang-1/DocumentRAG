"use strict";const n=require("electron");n.contextBridge.exposeInMainWorld("ipcRenderer",{on(...e){const[i,r]=e;return n.ipcRenderer.on(i,(o,...t)=>r(o,...t))},off(...e){const[i,...r]=e;return n.ipcRenderer.off(i,...r)},send(...e){const[i,...r]=e;return n.ipcRenderer.send(i,...r)},invoke(...e){const[i,...r]=e;return n.ipcRenderer.invoke(i,...r)},openFileDialog:()=>n.ipcRenderer.invoke("open-file-dialog"),openFile:e=>n.ipcRenderer.invoke("open-file",e),registUser:e=>n.ipcRenderer.invoke("regist",e),validateUser:e=>n.ipcRenderer.invoke("validate-user",e),promptLLM:e=>n.ipcRenderer.invoke("prompt-llm",e),onPromptedStream:e=>n.ipcRenderer.on("llm-stream",(i,r)=>{e(r)}),launchContainers:e=>n.ipcRenderer.invoke("launch-docker-containers",e),createChromaClient:e=>n.ipcRenderer.invoke("create-chroma-client",e),addConversationHistory:e=>n.ipcRenderer.invoke("add-session-history",e),getConversationHistory:e=>n.ipcRenderer.invoke("query-session-history",e),addKnowledge:e=>n.ipcRenderer.invoke("add-knowledge",e),getKnowledge:e=>n.ipcRenderer.invoke("query-knowledge",e)});
